<?xml version="1.0"?>
<ruleset name="PHP_CodeSniffer">
  <description>PHPCS Standards for my projects.</description>

  <file>app</file>
  <file>Modules</file>
  <file>bootstrap</file>
  <file>config</file>
  <file>database</file>
  <file>resources</file>
  <file>routes</file>
  <file>tests</file>

  <exclude-pattern type="relative">^.git/*</exclude-pattern>
  <exclude-pattern type="relative">^node_modules/*</exclude-pattern>
  <exclude-pattern type="relative">^public_html/*</exclude-pattern>
  <exclude-pattern type="relative">^storage/*</exclude-pattern>
  <exclude-pattern>*/.phpstorm.meta.php</exclude-pattern>
  <exclude-pattern>*/_ide_helper.php</exclude-pattern>
  <exclude-pattern>*/cache/*</exclude-pattern>
  <exclude-pattern>*/*.xml</exclude-pattern>
  <exclude-pattern>*/*.blade.php</exclude-pattern>
  <exclude-pattern>*/autoload.php</exclude-pattern>
  <exclude-pattern>*/docs/*</exclude-pattern>
  <exclude-pattern>*/vendor/*</exclude-pattern>
  <exclude-pattern>*/config/*</exclude-pattern>
  <exclude-pattern>*/public/index.php</exclude-pattern>
  <exclude-pattern>*/public_html/index.php</exclude-pattern>
  <exclude-pattern>*/Console/Kernel.php</exclude-pattern>
  <exclude-pattern>*/Http/Kernel.php</exclude-pattern>
  <exclude-pattern>*/lang/*</exclude-pattern>

  <!-- Show progress of the run -->
  <arg value="p" />

  <!-- Show sniff codes in all reports -->
  <arg value="s" />

  <!-- Use colors in output -->
  <arg name="colors" />
  <arg name="extensions" value="php" />
  <arg name="encoding" value="utf-8" />

  <ini name="memory_limit" value="128M"/>
  <ini name="error_reporting" value="E_ALL~E_DEPRECATED"/>

  <rule ref="PSR12">
    <exclude name="PSR12.Traits.UseDeclaration.MultipleImport" />
  </rule>

  <rule ref="PSR2">
    <exclude name="PSR2.ControlStructures.SwitchDeclaration.BreakIndent" />
    <exclude name="PSR2.ControlStructures.ControlStructureSpacing.SpacingAfterOpenBrace" />
  </rule>

  <rule ref="PSR1">
    <!-- <exclude-pattern>*.php</exclude-pattern> -->
    <!-- <exclude name="PSR1.Methods.CamelCapsMethodName.NotCamelCaps"/> -->
    <exclude-pattern>database/*</exclude-pattern>
  </rule>

  <rule ref="PSR1.Methods.CamelCapsMethodName.NotCamelCaps">
    <exclude-pattern>*/tests/*</exclude-pattern>
  </rule>

  <rule ref="PEAR.Functions.ValidDefaultValue" />
  <rule ref="PEAR.Commenting.InlineComment" />
  <!-- Assignment that spawn two lines must have their equal sign indented and on the new line -->
  <rule ref="PEAR.Formatting.MultiLineAssignment" />

  <rule ref="PSR2.Classes.ClassDeclaration">
    <properties>
      <property name="indent" value="2" />
    </properties>
  </rule>

  <rule ref="PEAR.WhiteSpace.ObjectOperatorIndent">
    <properties>
      <property name="indent" value="4" />
      <property name="multilevel" value="true" />
    </properties>
  </rule>

  <rule ref="PEAR.WhiteSpace.ScopeClosingBrace">
    <properties>
      <property name="indent" value="2" />
    </properties>
  </rule>

  <rule ref="PSR1.Classes.ClassDeclaration.MissingNamespace">
    <exclude-pattern>database/</exclude-pattern>
  </rule>

  <rule ref="Generic.Debug.JSHint" />
  <rule ref="Generic.Debug.CSSLint" />
  <rule ref="Generic.Files.ByteOrderMark" />
  <rule ref="Generic.Metrics.NestingLevel" />
  <rule ref="Generic.PHP.UpperCaseConstant" />
  <rule ref="Generic.PHP.DeprecatedFunctions" />
  <rule ref="Generic.PHP.ForbiddenFunctions" />
  <rule ref="Generic.PHP.NoSilencedErrors" />
  <rule ref="Generic.Classes.DuplicateClassName" />
  <rule ref="Generic.CodeAnalysis.JumbledIncrementer" />
  <rule ref="Generic.CodeAnalysis.AssignmentInCondition" />
  <rule ref="Generic.CodeAnalysis.EmptyStatement" />
  <rule ref="Generic.CodeAnalysis.ForLoopShouldBeWhileLoop" />
  <rule ref="Generic.CodeAnalysis.ForLoopWithTestFunctionCall" />
  <rule ref="Generic.CodeAnalysis.JumbledIncrementer" />
  <rule ref="Generic.CodeAnalysis.UnconditionalIfStatement" />
  <rule ref="Generic.CodeAnalysis.UnnecessaryFinalModifier" />
  <rule ref="Generic.CodeAnalysis.UnusedFunctionParameter" />
  <rule ref="Generic.CodeAnalysis.UselessOverridingMethod" />
  <rule ref="Generic.NamingConventions.ConstructorName" />

  <rule ref="Generic.CodeAnalysis.EmptyPHPStatement">
    <type>error</type>
  </rule>

  <rule ref="Generic.Metrics.CyclomaticComplexity">
    <properties>
        <property name="complexity" value="20"/>
        <property name="absoluteComplexity" value="50"/>
    </properties>
</rule>

  <rule ref="Generic.Arrays.ArrayIndent">
    <properties>
      <property name="indent" value="2" />
    </properties>
  </rule>

  <rule ref="Generic.PHP.LowerCaseConstant">
    <severity>0</severity>
  </rule>


  <rule ref="Generic.ControlStructures.InlineControlStructure">
    <severity>4</severity>
    <properties>
      <property name="error" value="false" />
    </properties>
  </rule>

  <rule ref="Generic.Metrics.NestingLevel">
    <properties>
      <property name="nestingLevel" value="5" />
      <property name="absoluteNestingLevel" value="10" />
    </properties>
  </rule>

  <rule ref="Generic.Formatting.MultipleStatementAlignment">
    <severity>1</severity>
  </rule>

  <rule ref="Generic.NamingConventions.CamelCapsFunctionName">
    <exclude-pattern>*/tests/*</exclude-pattern>
    <severity>1</severity>
  </rule>

  <rule ref="Generic.Files.LineLength">
    <properties>
      <property name="lineLimit" value="200" />
      <property name="absoluteLineLimit" value="220" />
    </properties>
  </rule>

  <!-- Have 12 chars padding maximum and always show as errors -->
  <rule ref="Generic.Formatting.MultipleStatementAlignment">
    <properties>
      <property name="maxPadding" value="12" />
      <property name="error" value="true" />
    </properties>
  </rule>

  <rule ref="Generic.WhiteSpace.ScopeIndent">
    <!-- <severity>4</severity> -->
    <type>warning</type>
    <properties>
      <property name="indent" value="2" />
      <property name="exact" value="true" />
      <property name="ignoreIndentationTokens" type="array">
        <!-- <element value="T_COMMENT" /> -->
        <!-- <element value="T_DOC_COMMENT_OPEN_TAG" /> -->
        <element value="T_STRING_CONCAT" />
        <element value="T_COLON" />
        <element value="T_COALESCE" />
      </property>
    </properties>
  </rule>

  <rule ref="Squiz.PHP.LowercasePHPFunctions" />
  <rule ref="Squiz.PHP.NonExecutableCode" />
  <rule ref="Squiz.Strings.DoubleQuoteUsage" />
  <rule ref="Squiz.WhiteSpace.SemicolonSpacing" />
  <rule ref="Squiz.Operators.ValidLogicalOperators" />
  <rule ref="Squiz.WhiteSpace.CastSpacing" />
  <rule ref="Squiz.WhiteSpace.ControlStructureSpacing" />
  <rule ref="Squiz.WhiteSpace.LogicalOperatorSpacing" />


  <rule ref="Squiz.PHP.CommentedOutCode">
    <properties>
      <property name="maxPercentage" value="50" />
    </properties>
  </rule>

  <rule ref="Squiz.WhiteSpace.FunctionSpacing">
    <properties>
      <property name="spacing" value="1" />
      <property name="spacingBeforeFirst" value="0" />
      <property name="spacingAfterLast" value="0" />
    </properties>
  </rule>

  <rule ref="Squiz.Arrays.ArrayDeclaration">
    <exclude name="Squiz.Arrays.ArrayDeclaration.ValueNotAligned" />
    <exclude name="Squiz.Arrays.ArrayDeclaration.KeyNotAligned" />
    <exclude name="Squiz.Arrays.ArrayDeclaration.DoubleArrowNotAligned" />
    <exclude name="Squiz.Arrays.ArrayDeclaration.CloseBraceNotAligned" />
    <exclude name="Squiz.Arrays.ArrayDeclaration.ValueNoNewline" />
    <exclude name="Squiz.Arrays.ArrayDeclaration.MultiLineNotAllowed" />
    <exclude name="Squiz.Arrays.ArrayDeclaration.SingleLineNotAllowed" />
    <exclude name="Squiz.Arrays.ArrayDeclaration.NoKeySpecified" />
    <exclude name="Squiz.Arrays.ArrayDeclaration.KeySpecified" />
  </rule>

  <rule ref="Squiz.WhiteSpace.OperatorSpacing">
    <properties>
      <property name="ignoreNewlines" value="true" />
    </properties>
  </rule>
</ruleset>
